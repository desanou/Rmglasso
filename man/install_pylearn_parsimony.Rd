% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/install_python_deps.R
\name{install_pylearn_parsimony}
\alias{install_pylearn_parsimony}
\title{Install the python library pylearn-parsimony and other required libraries}
\usage{
install_pylearn_parsimony(
  method = c("auto", "virtualenv", "conda"),
  conda = "auto",
  extra_pack = c("scipy == 1.7.1", "scikit-learn", "numpy == 1.22.4", "six",
    "matplotlib"),
  python_version = "3.8",
  restart_session = TRUE,
  envname = NULL,
  ...
)
}
\arguments{
\item{method}{Installation method. By default, "auto" automatically finds a
method that will work in the local environment. Change the default to force
a specific installation method. Note that the "virtualenv" method is not
available on Windows.}

\item{conda}{The path to a \code{conda} executable. Use \code{"auto"} to allow
\code{reticulate} to automatically find an appropriate \code{conda} binary.
See \strong{Finding Conda} and \code{\link[reticulate:conda_binary]{conda_binary()}} for more details.}

\item{extra_pack}{Character vector. Extra-packages to be installed.}

\item{python_version}{The requested Python version. Ignored when attempting
to install with a Python virtual environment.}

\item{restart_session}{Restart R session after installing (note this will
only occur within RStudio)}

\item{envname}{The name, or full path, of the environment in which Python
packages are to be installed. When \code{NULL} (the default), the active
environment as set by the \code{RETICULATE_PYTHON_ENV} variable will be used;
if that is unset, then the \code{r-reticulate} environment will be used.}

\item{...}{additionnal arguments passed to \code{\link[reticulate:py_install]{reticulate::py_install()}}}
}
\value{
No return value.
}
\description{
pylearn-parsimony contains the solver CONESTA used for the mglasso problem
and is available on github at https://github.com/neurospin/pylearn-parsimony
It is advised to use a python version ">=3.7,<3.10".
Indeed, the latest version of scipy under which mglasso was developped is scipy 1.7.1 which is based on python ">=3.7,<3.10".
In turn, this version of scipy can only be associated with a version of numpy ">=1.16.5,<1.23.0"
}
